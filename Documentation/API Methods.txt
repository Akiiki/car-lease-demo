-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
START_ADMIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	START_IDENTITY
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		CREATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/admin/identity
				TYPE: POST
				INPUT_TYPE: JSON
				INPUT_OBJECT:  { "account": <account> }
				TRANSFER_ENCODING: CHUNKED
				RESPONSE_TYPE: SINGLE
				RESPONSE_FORMAT: JSON OBJECT
				RESPONSE:
					SUCCESS: 
						{ "persona_id:": <account> }
					ERROR:
						ERROR_1:
							STATUS: 400
							MESSAGE: Unable to log user in
							POSSIBLE_CAUSES: 
									1) The peer isn't running
									2) The address to the peer is incorrect
									3) The CA isn't running
				DESCRIPTION: Takes an account name for openblockchain and if not logged in it registers them with the registrar.
							 Sets the current logged in user on the app server to be the account passed.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	
		READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/admin/identity
				TYPE: GET
				TRANSFER_ENCODING: CHUNKED
				RESPONSE_TYPE: SINGLE
				RESPONSE_FORMAT: JSON OBJECT
				RESPONSE:
					SUCCESS:
						{ "persona_id:": <account> }
				DESCRIPTION: Returns the current session user. If an error occurs the user is returned undefined. This may be due to the CA not running or the user not existsing.
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	END_IDENTITY
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
END_ADMIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
START_BLOCKCHAIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	START_BLOCKS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/blockchain/blocks
				TYPE: GET
				TRANSFER_ENCODING: CHUNKED
				RESPONSE_TYPE: SINGLE
				RESPONSE_FORMAT: JSON OBJECT
				RESPONSE:
					SUCCESS:
						{ "height:": <height> }
					ERROR:
						ERROR_1:
							STATUS: 400
							MESSAGE: Unable to get chain length
							POSSIBLE_CAUSES:
									1) The blockchain has no length
									2) The Peers aren't running
									3) The host ip/port in the config file is incorrect
				DESCRIPTION: Gets the current length of the blockchain.
							
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_BLOCK
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------				
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/blocks/:blockNum
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: JSON OBJECT
					RESPONSE:
						SUCCESS: 
							{ "block": <block> }
						ERROR:
							ERROR_1:
								STATUS: 400
								MESSAGE: Unable to get block
								POSSIBLE_CAUSES:
										1) The block doesnt exist
										2) The peers aren't running
										3) The host ip/port in the config file is incorrect
					DESCRIPTION: Takes a number and returns the block data for the block at that position in the chain.
						
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_BLOCK
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	END_BLOCKS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	START_ASSETS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_VEHICLES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			CREATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/assets/vehicles
					TYPE: POST
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: STREAMED
					RESPONSE_FORMAT: JSON OBJECTS SPLIT BY && DELIMITER
					RESPONSE:
						SUCCESS:
							{"message":"Generating V5cID"}&&{"message":"Checking V5cID is unique"}&&{"message":"Creating vehicle with v5cID: <v5c_id> "}&&{"message":"Confirming creation"}&&{"message":"Creation confirmed"}
						ERROR:
							ERROR_1:
								STATUS: 400
								MESSAGE: Unable to create vehicle
								POSSIBLE_CAUSES:
										1) The vehicle contract doesn't exist
										2) The peer has died
										3) The CA isn't running
							ERROR_2:
								STATUS: 400
								MESSAGE: Unable to connect to API URL
								POSSIBLE_CAUSES:
										1) The host ip/port in the config file is incorrect
							ERROR_3:
								STATUS: 400
								MESSAGE: Unable to confirm vehicle create. Request time out
								POSSIBLE_CAUSES:
										1) The peer has been killed
										2) The vehicle was created with an error e.g. user did not have permissions to create vehicle
					DESCRIPTION: Creates a new blank vehicle in the vehicle contract with the <v5c_id> that was passed.
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/assets/vehicles
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: STREAMED
					RESPONSE_FORMAT: JSON OBJECTS SPLIT BY && DELIMITER
					RESPONSE:
						SUCCESS:
							{ "VIN": <vin> , "make": <make> , "model": <model> , "reg": <reg> , "owner": <owner> , "colour": <colour> , "scrapped": <scrapped> , "status": <status> , "v5cID" : <v5c_id> }&&
						ERROR:
							ERROR_1: 
								STATUS: 400
								MESSAGE: Unable to get blockchain assets
								POSSIBLE_CAUSES:
										1) The events contract does not exist
										2) The peers aren't running
										3) The CA isn't running
										4) The host ip/port in the config file is incorrect
							ERROR_2:
								STATUS: 400
								MESSAGE: Unable to get v5c <v5c_id>
								POSSIBLE_CAUSES: 
										1) The V5C with that id does not exist
										2) The peers aren't running
										3) The host ip/port in the config file is incorrect
										4) The vehicle contract does not exist
										5) The CA isn't running
					DESCRIPTION: Returns as JSON objects all the vehicles that the user owns or has access to read.
								
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			START_VEHICLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				DELETE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
											
					/blockchain/assets/vehicles/:v5cID
							TYPE: DELETE
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{"message": "Formatting request" }&&{ "message": "Updating scrap value" }&&{ "message": "Confirming update" }&&{ "message": "Scrap updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update scrap
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function.
												6) The CA isn't running
							DESCRIPTION: Scraps the vehicle if the user has permission to do so.
										
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_COLOUR
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/colour
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "colour": <colour> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to get colour. v5cID: <v5c_id>
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Reads the colour of the vehicle if the user has read permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/colour
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: {"value": <string> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating colour value" }&&{ "message": "Confirming update" }&&{ "message": "Colour updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update colour
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip in the rest_api.json is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function
												6) The CA isn't running
							DESCRIPTION: Updates the color of the vehicle if the user has permission.
							
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_COLOUR
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_MAKE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/make
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "make": <make> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to get make. v5cID: <v5c_id>
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Reads the make of the vehicle if the user has read permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/make
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: { "value": <string> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating make value" }&&{ "message": "Confirming update" }&&{ "message": "Make updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update make
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip in the rest_api.json is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function
												6) The CA isn't running
							DESCRIPTION: Updates the make of the vehicle if the user has permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_MAKE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_MODEL
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/model
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "model": <model> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to get model. v5cID: <v5c_id>
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
													1) The chaincode with that <v5c_id> does not exist
													2) The peers aren't running
													3) The host ip/port in the config file is incorrect
													4) The user doesn't have permission to read the vehicle
													5) The CA isn't running
							DESCRIPTION: Reads the model of the vehicle if the user has read permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/model
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: { "value": <string> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating model value" }&&{ "message": "Confirming update" }&&{ "message": "Model updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update model
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip in the rest_api.json is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function
												6) The CA isn't running
							DESCRIPTION: Updates the model of the vehicle if the user has permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_MODEL
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------										
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_REG
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/reg
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "reg": <reg> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to get reg. v5cID: <v5c_id>
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Reads the registration of the vehicle if the user has read permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/reg
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: {"value": <string> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating registration value" }&&{ "message": "Confirming update" }&&{ "message": "Registration updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update reg
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip in the rest_api.json is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function
												6) The CA isn't running
							DESCRIPTION: Updates the registration of the vehicle if the user has permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_REG
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_VIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/VIN
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "VIN": <vin> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to get VIN. v5cID: <v5c_id>
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Reads the VIN of the vehicle if the user has read permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/VIN
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: {"value": <string> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating VIN value" }&&{ "message": "Confirming update" }&&{ "message": "VIN updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update VIN.
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip in the rest_api.json is incorrect
												4) The function does not exist for that v5cID
												5) The user does not have permission to execute that function
												6) The vin was already a non-zero value
												7) The CA isn't running
							DESCRIPTION: Updates the VIN of the vehicle if the user has permission.
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_VIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_SCRAPPED
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/scrapped
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "scrapped": <scrapped> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to read scrap
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Reads the VIN of the vehicle if the user has read permission.															
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_SCRAPPED
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				START_OWNER
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/owner
							TYPE: GET
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: SINGLE
							RESPONSE_FORMAT: JSON OBJECT
							RESPONSE:
								SUCCESS:
									{ "owner": <ecert> }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to read owner.
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The user doesn't have permission to read the vehicle
												5) The CA isn't running
							DESCRIPTION: Returns the <ecert> of the owner of the vehicle
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					UPDATE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						/blockchain/assets/vehicles/:v5cID/owner
							TYPE: PUT
							INPUT_TYPE: JSON
							INPUT_OBJECT: {"value": <string> , "function_name": <function_name> }
							TRANSFER_ENCODING: CHUNKED
							RESPONSE_TYPE: STREAMED
							RESPONSE_FORMAT: JSON OBJECT SPLIT BY && DELIMITER
							RESPONSE:
								SUCCESS:
									{ "message": "Formatting request" }&&{ "message": "Updating owner value" }&&{ "message": "Confirming update" }&&{ "message": "Owner updated" }
								ERROR:
									ERROR_1:
										STATUS: 400
										MESSAGE: Unable to update owner
										OTHER_PARAMETERS:
												v5cID: <v5c_id>
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The function does not exist for that v5cID.
												5) The user does not have permission to execute that function.
												6) The receiver does not have permission to receive the car in that state.
												7) The sender or recipient aren't logged in
									ERROR_2:
										STATUS: 400
										MESSAGE: Unable to confirm owner update. Request timed out.
										POSSIBLE_CAUSES:
												1) The chaincode with that <v5c_id> does not exist
												2) The peers aren't running
												3) The host ip/port in the config file is incorrect
												4) The function does not exist for that v5cID.
												5) The user does not have permission to execute that function.
												6) The receiver does not have permission to receive the car in that state.
												7) The sender or recipient aren't logged in
							DESCRIPTION: Transfers ownership of the asset from one user to another.
										 
											
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				END_OWNER
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			END_VEHICLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_VEHICLES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	END_ASSETS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	START_PARTICIPANTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/blockchain/participants
				TYPE: GET
				TRANSFER_ENCODING: CHUNKED
				RESPONSE_TYPE: SINGLE
				RESPONSE_FORMAT: JSON OBJECT
				RESPONSE: 
					SUCCESS: 
						{
							"regulators": [ <participant> , ... , <participant> ], 
							"manufacturers": [ <participant> , ... , <participant> ],
							"dealerships": [ <participant> , ... , <participant> ],
							"lease_companies": [ <participant> , ... , <participant> ],
							"leasees": [ <participant> , ... , <participant> ],
							"scrap_merchants": [ <participant> , ... , <participant> ]
						}
					ERROR:
						ERROR_1:
							STATUS: 404
							MESSAGE: Participants file not found
							POSSIBLE_CAUSES: 
									1) The file participants.json is not located in the participant folder
						ERROR_2:
							STATUS: 400
							MESSAGE: Invalid JSON object
							POSSIBLE_CAUSES:
									1) The file participants.json is not a valid JSON object
				DESCRIPTION: Returns the participants saved on the app server

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_REGULATORS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/regulators
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the regulators saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_REGULATORS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_MANUFACTURERS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/manufacturers
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the manufacturers saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_MANUFACTURERS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_DEALERSHIPS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/dealerships
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the dealerships saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_DEALERSHIPS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_LEASE_COMPANIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/lease_companies
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the lease companies saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_LEASE_COMPANIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_LEASEES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/leasees
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the leasees saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_LEASEES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		START_SCRAP_MERCHANTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				/blockchain/participants/scrap_merchants
					TYPE: GET
					TRANSFER_ENCODING: CHUNKED
					RESPONSE_TYPE: SINGLE
					RESPONSE_FORMAT: ARRAY OF JSON OBJECTS
					RESPONSE: 
						SUCCESS: 
							[ <participant> , ... , <participant> ]
						ERROR:
							ERROR_1:
								STATUS: 404
								MESSAGE: Participants file not found
								POSSIBLE_CAUSES: 
										1) The file participants.json is not located in the participant folder
							ERROR_2:
								STATUS: 400
								MESSAGE: Invalid JSON object
								POSSIBLE_CAUSES:
										1) The file participants.json is not a valid JSON object
					DESCRIPTION: Returns the scrap merchants saved on the app server
					
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		END_SCRAP_MERCHANTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	END_PARTICIPANTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	START_EVENTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		READ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/blockchain/events
				TYPE: GET
				TRANSFER_ENCODING: CHUNKED
				RESPONSE_TYPE: SINGLE
				RESPONSE_FORMAT: SINGLE JSON OBJECT
				RESPONSE:
					SUCCESS:
						{ "Events": [ <event> ,..., <event> ]}
					ERROR:
						ERROR_1:
							STATUS: 400
							MESSAGE: Unable to get blockchain events
							POSSIBLE_CAUSES:
									1) The events contract does not exist
						ERROR_2:
							STATUS: 400
							MESSAGE: Unable to connect to API URL
							POSSIBLE_CAUSES:
									1) The API URL set in the configuration file is incorrect
									2) The web server serving the rest_api.json file is not running
				DESCRIPTION: Returns the events saved in the blockchain
						
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	END_EVENTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
END_BLOCKCHAIN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEFINITIONS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	account:
		TYPE: String
		DESCRIPTION: An OpenBlockchain enrollment ID.
	
	height:
		TYPE: Integer
		DESCRIPTION: An integer denoting the current length of the blockchain.
		
	block:
		TYPE: JSON Object
		DESCRIPTION: A JSON Object containing all the details of a block retrieved from the blockchain.
		PROPERTIES:
			proposerID:
				TYPE: String
				DESCRIPTION: Creator/originator of the block.
			timestamp:
				TYPE: String
				DESCRIPTION: Time of block creation.
			transactions:
				TYPE: Array
				ITEMS: <transaction>
			stateHash:
				TYPE: String
				DESCRIPTION: Global state hash after executing all transactions in the block.
			previousBlockHash:
				TYPE: String
				DESCRIPTION: Hash of the previous block in the blockchain.
			consensusMetadata:
				TYPE: String
				DESCRIPTION: Metadata required for consensus.
			nonHashData:
				TYPE: String
				DESCRIPTION: Data stored in the block, but excluded from the computation of block hash.
			
	transaction:
		TYPE: JSON Object
		DESCRIPTION: A JSON Object containing all the details of a transaction on the blockchain.
		PROPERTIES:
			type:
				TYPE: String
				DESCRIPTION: The type of transaction that occured.
				POSSIBLE_VALUES: 
					UNDEFINED
					CHAINCODE_NEW
					CHAINCODE_UPDATE
					CHAINCODE_EXECUTE
					CHAINCODE_TERMINATE
			chaincodeID: 
				TYPE: <chaincodeID>
				DESCRIPTION: Chaincode ID Details
			function: 
				TYPE: String
				DESCRIPTION: Function to execute within a chaincode.
			args:
				TYPE: Array
				ITEMS: String
				DESCRIPTION: Arguments supplied to the chaincode function.
			payload:
				TYPE: String
				DESCRIPTION: Payload supplied for chaincode function execution.
			uuid:
				TYPE: String
				DESCRIPTION: Unique transaction identifier.
	
	chaincodeID:
		TYPE: JSON Object
		PROPERTIES:
			url:
				TYPE: String
				DESCRIPTION: Url for accessing the chaincode.
			version:
				TYPE: String
				DESCRIPTION: Current version of the chaincode.
	
	vin:
		TYPE: Integer
		DESCRIPTION: The 15 character number that identifies the chasis of a vehicle.
		
	make: 
		TYPE: String
		DESCRIPTION: A string representing the name of the manufacturer of the vehicle.
	
	model:
		TYPE: String
		DESCRIPTION: A string representing the name of the model of the vehicle.
		
	reg:
		TYPE: String
		DESCRIPTION: A string representing the registration number of a vehicle (number plate). Usually a mix of letters (L) and numbers (N) in the format "LLNN LLL"
		
	owner:
		TYPE: <account>
		DESCRIPTION: The account that owns the car.
	
	colour:
		TYPE: String
		DESCRIPTION: A string representing the colour of the car.
		
	scrapped:
		TYPE: Boolean
		DESCRIPTION: A true or false value relating to whether the car has been scrapped or not.
		
	status:
		TYPE: Integer
		DESCRIPTION: An integer value representing the stage the car is at:
					 0 - Vehicle Template
					 1 - Being Manufactured
					 2 - Private Ownership
					 3 - Leased
					 4 - Scrapped
					 
	attribute_state:
		TYPE: String
		DESCRIPTION: The current state of an attribute of a contract.
		
	attribute:
		TYPE String
		DESCRIPTION: The name of an attribute of a contract.
		
	function_name:
		TYPE: String
		DESCRIPTION: The contract function the user wishes to call.
	
	v5c_id: 
		TYPE: String
		DESCRIPTION: A string of the unique identifier of the V5C in the format LL0000000.
			
	participant:
		TYPE: JSON OBJECT
		PROPERTIES:
			name:
				TYPE: String
				DESCRIPTION: The name of the participant
			identity: 
				TYPE: String
				DESCRIPTION: The unique identity of the participant
			address_line_n:
				TYPE: String
				DESCRIPTION: N can take the value of an integer. The system increments from 1 for each line in the address
			postcode:
				TYPE: String
				DESCRIPTION: The postcode (zipcode) of the participant
				
	event: 
		TYPE: JSON OBJECT
		PROPERTIES:
			name: 
				TYPE: String
				DESCRIPTION: The name of the event
				POSSIBLE_VALUES:
					Create
					Update
					Transfer
					Scrapped
			time:
				TYPE: Timestamp
				DESCRIPTION: UTC Timestamp of when the event was logged
			
			text:
				TYPE: String
				DESCRIPTION: The description of the event detailing what occured e.g. reg changed from BLANK to BLANK
				
	ecert:
		TYPE: String
		DESCRIPTION: The certificate associated with the user account.
		
			
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
END_DEFINITIONS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------